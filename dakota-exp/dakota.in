{{$l := .ConstrLow}} {{$a := .ConstrMat}} {{$u := .ConstrUp}}
{{$eqa := .EqConstrMat}} {{$eqtarget := .EqConstrTarget}}

strategy
    graphics
    tabular_graphics_data
        tabular_graphics_file = 'cycopt.dat'
    single_method

method
    linear_inequality_lower_bounds = {{range $val := $l.Col nil 0}} {{$val}}{{end}}
    linear_inequality_upper_bounds = {{range $val := $u.Col nil 0}} {{$val}}{{end}}
    linear_inequality_constraint_matrix = {{range $row, $foo := $a.Col nil 0}}{{range $col, $bar := $a.Row nil 0}} {{$a.At $row $col}}{{end}}
                                          {{end}}

    linear_equality_targets = {{range $val := $eqtarget.Col nil 0}} {{$val}}{{end}}
    linear_equality_constraint_matrix = {{range $row, $foo := $eqa.Col nil 0}}{{range $col, $bar := $eqa.Row nil 0}} {{$eqa.At $row $col}}{{end}}
                                        {{end}}

    max_iterations = 500
    convergence_tolerance = 1e-6
    soga
        population_size 50
        fitness_type merit_function
            constraint_penalty 1.0

model
    single

{{$dot := .}}
variables
    discrete_design_range = {{.Nvars}}
        initial_point     {{range .Params}} {{.N}}{{end}}
        lower_bounds      {{range .LowerBounds.Col nil 0}} {{.}}{{end}}
        upper_bounds      {{range .UpperBounds.Col nil 0}} {{.}}{{end}}
        descriptors       {{range .VarNames}} '{{.}}'{{end}}

interface
    fork
        analysis_driver = 'cycdriver -scen={{.File}}'
    asynchronous

responses
    objective_functions = 1
    numerical_gradients
        method_source dakota
        interval_type forward
        fd_gradient_step_size = 1.e-5
    no_hessians
